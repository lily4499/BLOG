create 2 repo on github; 
in github ; create devcode; create doc
in Gitbash; mkdir devpip; cd devpip; 
mkdir devcode doc; cd devcode(echo "# devcode" >> README.md ); git init; git remote add origine URLrepo_devcode; git commit -m "new files"
copy code from server -> scp -r lil@remote:/path_folder_to_sent/* username@remote2:/where_put
vim webapp/pom.xml; change artifact name webapp.war to dev.war; 
vim webapp/src/main/webapp/index.jsp
vim Dockerfile copy webapp/target/dev.war /usr/local/tomcat/webapps
git add .; git commit -m "dev pratic"; git push origine master
cd ../; cd doc(echo "# devcode" >> README.md ); git init; git remote add origine URLrepo_doc; git commit -m "new files"
copy doc from server -> scp -r lil@remote:/home/lil/dev*/* .; git add .; git....

set up Ansible; EC2 AWS; user data(yum update, install docker); security group (ssh from world) -> yum install ansible; cd /etc/ansible
systemctl start docker; systemctl enable docker; docker run -it laly9999/centos-ssh; docker ps; docker inspect id; ssh "IP"; exit; 
vim hosts ([serv]) (ser1 ansible_host="IP" ansible_ssh_user=root ansible_ssh_pass=abc) -> ansible serv -m ping
vim play.yml( ---
               - hosts: serv
                 user: root
                 tasks:
                      - name: Install apache
                        yum:
                          name: httpd
                          state: present
                      - name: Start Daemon
                        service:
                          name: httpd
                          state: started
                          enabled: yes
ansible-playbook play.yml --syntax-check                          
docker exec -it id_cont bash -> service httpd status -> exit

set up jenkins; EC2 AWS; from AWSmarket; user data(yum update, install docker); security group (ssh from myIP, 8080) ->service jenkins restart
(vim /etc/yum.repos.d/jenkins.repo; change gpgcheck=1 to 0);  yum update;
on jenkins console -> plugins cloudbees, ssh ->
